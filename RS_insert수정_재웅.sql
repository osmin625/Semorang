---- 11/01 S_INCLUDE_TR 테이블 생성
DROP TABLE S_INCLUDE_TR CASCADE CONSTRAINTS;
CREATE TABLE S_INCLUDE_TR(
    snapshot_id VARCHAR(11) NOT NULL,
    thing_rank_id VARCHAR(11) NOT NULL,
    PRIMARY KEY (snapshot_id,thing_rank_id),
    FOREIGN KEY (snapshot_id) REFERENCES RANKING_SNAPSHOT(snapshot_id) ON DELETE CASCADE,
    FOREIGN KEY (thing_rank_id) REFERENCES THINGRANK(thing_rank_id) ON DELETE CASCADE
);

-- SELECT, TRUNCATE문 (작업대)
SELECT * FROM RANKING_SNAPSHOT;
SELECT * FROM S_INCLUDE_TR SIT;
SELECT * FROM USERS U ;
TRUNCATE TABLE RANKING_SNAPSHOT ;
TRUNCATE TABLE S_INCLUDE_TR ;

---- USER 이름으로 THINGRANK 찾기
SELECT
	U.USER_ID
	,T.THING_RANK_ID 
FROM USERS U, THINGRANK T 
WHERE 1=1
	AND U.USER_ID = T.USER_ID
	AND U.USER_ID ='user_1'
;

--user 1명의 게시물 조회
SELECT * 
FROM RANKING_SNAPSHOT RS
WHERE 1=1
	AND RS.USER_ID = 'user_1'
;

-- 게시물 1개에 대한 작성자,thing_rank 개수 조회
SELECT 
	RS.SNAPSHOT_ID AS 게시물번호
	,U.NAME AS 작성자
	,COUNT(T.THING_RANK_ID) AS 포함되어_있는_THING_RANK_개수
FROM RANKING_SNAPSHOT RS , S_INCLUDE_TR SIT, THINGRANK T ,USERS U 
WHERE 1=1
	AND RS.USER_ID  = U.USER_ID 
	AND RS.SNAPSHOT_ID = SIT.SNAPSHOT_ID 
	AND SIT.THING_RANK_ID = T.THING_RANK_ID 
--	AND RS.SNAPSHOT_ID = 'RS_4'
GROUP BY
	RS.SNAPSHOT_ID
	,U.NAME
ORDER BY 
	RS.SNAPSHOT_ID 
;

-- ranking_snapshot 테이블 제약조건 조회
SELECT *
FROM USER_CONSTRAINTS 
WHERE 1=1 
	AND table_name = 'RANKING_SNAPSHOT'
--	AND TABLE_NAME = 'THINGRANK'

-- RANKING_SNAPSHOT에서 thingrank 관련 열, 제약조건 날리기
ALTER TABLE RANKING_SNAPSHOT DROP CONSTRAINT SYS_C0017579;
ALTER TABLE RANKING_SNAPSHOT DROP COLUMN thing_rank_id;

-- THINGRANK의 제약조건 이름 수정하기
ALTER TABLE THINGRANK
RENAME CONSTRAINT SYS_C0017569 TO THINGRANK_PK;
ALTER TABLE THINGRANK
RENAME CONSTRAINT SYS_C0017568 TO THINGRANK_NOTNULL;

-- test용 INSERT 해보기
INSERT INTO S_INCLUDE_TR VALUES ('snapshot_29','for_match13');
INSERT INTO S_INCLUDE_TR VALUES ('snapshot_29','for_match42');

-- user_id 다른거 없는지 확인해보기
SELECT 
	U.USER_ID AS USERS_UID
	,RS.USER_ID AS RS_UID
	,T.USER_ID AS TR_UID
--	,RS.SNAPSHOT_ID
	,SIT.THING_RANK_ID 
FROM USERS U, RANKING_SNAPSHOT RS, S_INCLUDE_TR SIT , THINGRANK T 
WHERE 1=1
	AND U.USER_ID = RS.USER_ID
	AND RS.SNAPSHOT_ID  = SIT.SNAPSHOT_ID
	AND T.THING_RANK_ID  = SIT.THING_RANK_ID 
;


-- 제약조건 어떻게 주지.. 서로의 USER_ID가 같지 않을때 입력받고 싶지 않은데.. 트리거, CHECK 둘 다 잘 모르겠노
--ALTER TABLE S_INCLUDE_TR
--ADD CONSTRAINT S_RT_USERNAME_CHECK CHECK((SELECT T.USER_ID  
--											FROM THINGRANK T 
--											WHERE T.THING_RANK_ID = THING_RANK_ID)
--										!= 
--										(SELECT RS.USER_ID  
--										FROM RANKING_SNAPSHOT RS 
--										WHERE RS.SNAPSHOT_ID =W.SNAPSHOT_ID));
--
--CREATE OR REPLACE
--TRIGGER S_RT_USERNAME_CHECK
--BEFORE INSERT OR UPDATE OF THING_RANK_ID ON S_INCLUDE_TR
--FOR EACH ROW
--	WHEN ((SELECT T.USER_ID  FROM THINGRANK T WHERE T.THING_RANK_ID = NEW.THING_RANK_ID)
--			!= (SELECT RS.USER_ID  FROM RANKING_SNAPSHOT RS WHERE RS.SNAPSHOT_ID = NEW.SNQPSHOT_ID))
--	BEGIN 
--		AL
--	END
--;	




